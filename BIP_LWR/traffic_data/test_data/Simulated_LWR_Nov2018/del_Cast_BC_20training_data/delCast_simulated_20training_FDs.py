# -*- coding: utf-8 -*-

import os
import numpy as np
from collections import OrderedDict
from BIP_LWR.tools.util import load_CSV_data


# define list of 20 FDs. Then (at the bottom of the script) load up each BC from a CSV

FD_delCastsim_list = [OrderedDict([('z', 176.2342365518567),
              ('rho_j', 406.0695583845097),
              ('u', 3.19267572272094),
              ('w', 0.07285326462464363)]),
 OrderedDict([('z', 177.47585702086255),
              ('rho_j', 404.57278996551844),
              ('u', 3.203000272605505),
              ('w', 0.07080363386601778)]),
 OrderedDict([('z', 179.73481869876304),
              ('rho_j', 403.90615241542577),
              ('u', 3.120812242469273),
              ('w', 0.07962492103263044)]),
 OrderedDict([('z', 179.54575795173508),
              ('rho_j', 404.038460454137),
              ('u', 3.0878180728356663),
              ('w', 0.08457388569711345)]),
 OrderedDict([('z', 176.91554400189173),
              ('rho_j', 404.32863684447017),
              ('u', 3.099571114888426),
              ('w', 0.06565266848327549)]),
 OrderedDict([('z', 174.1430028774765),
              ('rho_j', 393.6165260885476),
              ('u', 3.151810602889584),
              ('w', 0.06642562915404976)]),
 OrderedDict([('z', 175.90598881080874),
              ('rho_j', 401.686529599961),
              ('u', 3.223094668104556),
              ('w', 0.0764878511485667)]),
 OrderedDict([('z', 175.92274041483557),
              ('rho_j', 389.7695503727539),
              ('u', 3.084402417339278),
              ('w', 0.05865043166373702)]),
 OrderedDict([('z', 172.01710631534078),
              ('rho_j', 385.961284908821),
              ('u', 3.0692867032231472),
              ('w', 0.03393193188838962)]),
 OrderedDict([('z', 176.8134978186963),
              ('rho_j', 393.53528061880667),
              ('u', 3.0547966801372732),
              ('w', 0.05371922109280728)]),
 OrderedDict([('z', 175.03481665759503),
              ('rho_j', 400.287169866329),
              ('u', 3.138248500199344),
              ('w', 0.03905449456043727)]),
 OrderedDict([('z', 173.46838090079976),
              ('rho_j', 390.4478706554923),
              ('u', 3.0402852485975354),
              ('w', 0.03998931079557308)]),
 OrderedDict([('z', 176.62040906196722),
              ('rho_j', 391.4148091405406),
              ('u', 3.009302326458869),
              ('w', 0.02375639505584112)]),
 OrderedDict([('z', 180.49351956523932),
              ('rho_j', 410.717861378466),
              ('u', 3.1337531291747664),
              ('w', 0.07901162643487494)]),
 OrderedDict([('z', 178.91423554569224),
              ('rho_j', 402.02207599246645),
              ('u', 3.1655633390661255),
              ('w', 0.07322433393692217)]),
 OrderedDict([('z', 175.1565363747499),
              ('rho_j', 397.70049803397603),
              ('u', 3.15088558731335),
              ('w', 0.05801149821735347)]),
 OrderedDict([('z', 180.2045776923671),
              ('rho_j', 408.5467893048377),
              ('u', 3.2322291556614133),
              ('w', 0.0907146316983661)]),
 OrderedDict([('z', 179.4355433261875),
              ('rho_j', 407.3138907528654),
              ('u', 3.242135867048507),
              ('w', 0.09966368306652237)]),
 OrderedDict([('z', 179.9766306597678),
              ('rho_j', 407.0016584150768),
              ('u', 3.1971975717888776),
              ('w', 0.07939394114280195)]),
 OrderedDict([('z', 175.66967935216502),
              ('rho_j', 400.0862216607077),
              ('u', 3.1661240409774405),
              ('w', 0.04703856995700292)])]

 # Load BCs from CSVs
base_path = "chain_data/Simulated_data/training_BCs"
for elem in range(20):
    for BC_type in ['BC_outlet', 'BC_inlet']:
        BC_path = "Del_Cast_Sim_training-{}_{}.csv".format(BC_type, elem)
        FD_delCastsim_list[elem][BC_type] = load_CSV_data(path=os.path.join(base_path, BC_path))
